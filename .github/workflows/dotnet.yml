name: dotnet
# NAME THE PIPELINE SAME AS FILE (WITHOUT ".yml")
# Docker
# Build a Docker image
# https://docs.microsoft.com/azure/devops/pipelines/languages/docker

# trigger:
# - main
on: [push, workflow_dispatch]


env:
 RESOURCE-GROUP: Projecto_Final
 LOCATION: eastus
 TEMPLATE-FILE: .azure/bicep/webapp.bicep
 SUBSCRIPTION-ID: "1ba34a65-885e-4ab8-8b59-9044b832c162"
 WEBAPP-NAME: WebApplicationBackendBotanica
 WEBAPP-NAME-API: botanicaencomedasAPI
 WEBAPP-NAME-FRONT: BotanicaEncomendasEnd
 
jobs:
  #Build, test and publish .net web project in repository
  buildandtest:
    runs-on: ubuntu-latest
    steps:
    #checkout the repository
    - uses: actions/checkout@v2
    #prepare runner for desired .net version SDK
    - name: Setup .NET
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: '7.0.x'
        include-prerelease: true
    #Build/Test/Publish the .net project
    - name: Build with dotnet
      run: dotnet build ./ClassBackendBotanica/ClassBackendBotanica.sln --configuration Release
    - name: Test with dotnet
      run: dotnet test ./ClassBackendBotanica/ClassBackendBotanica.sln --configuration Release
    - name: dotnet publish
      run: dotnet publish ./WebApplicationBackendBotanica/WebApplicationBackendBotanica.csproj -c Release -o ${{env.DOTNET_ROOT}}/WebApplicationBackendBotanica
    - name: dotnet publish API
      run: dotnet publish ./botanicaencomedasAPI/botanicaencomedasAPI.csproj -c Release -o ${{env.DOTNET_ROOT}}/botanicaencomedasAPI 
    - name: dotnet publish Front
      run: dotnet publish ./BotanicaEncomendasEnd/BotanicaEncomendasEnd.csproj -c Release -o ${{env.DOTNET_ROOT}}/BotanicaEncomendasEnd
    # upload the published website code artifacts
    - name: Upload artifact for deployment job
      uses: actions/upload-artifact@v3
      with:
        name: .net-app
        path: ${{env.DOTNET_ROOT}}/WebApplicationBackendBotanica
    - name: Upload artifact for deployment job
      uses: actions/upload-artifact@v3
      with:  
        name: .net-app1
        path: ${{env.DOTNET_ROOT}}/botanicaencomedasAPI
    - name: Upload artifact for deployment job
      uses: actions/upload-artifact@v3
      with:  
        name: .net-app2
        path: ${{env.DOTNET_ROOT}}/BotanicaEncomendasEnd
        
    # upload the bicep template as artifacts for next job
    - name: Upload artifact for deployment job
      uses: actions/upload-artifact@v3
      with:
        name: bicep-template
        path: ${{ env.TEMPLATE-FILE }}
        
  # Use Bicep to deploy infrastructure + Publish webapp 
  deploy:
    runs-on: ubuntu-latest
    needs: buildandtest
    environment:
      name: 'Development1'
    steps:
    
    #Download the publish files created in previous job
    - name: Download artifact from build job
      uses: actions/download-artifact@v3
      with:
        name: .net-app
        path: .net-app
    - name: Download artifact from build job
      uses: actions/download-artifact@v3
      with:
        name: .net-app1
        path: .net-app1
    - name: Download artifact from build job
      uses: actions/download-artifact@v3
      with:
        name: .net-app2
        path: .net-app2
  
    #Download the bicep templates from previous job
    - name: Download artifact from build job
      uses: actions/download-artifact@v3
      with:
        name: bicep-template
        path: bicep-template
        
   #Login in your azure subscription using a service principal (credentials stored as GitHub Secret in repo)
    - name: Azure Login
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS}}
           
    # Deploy Azure WebApp using Bicep file
    - name: deploy
      uses: azure/arm-deploy@v1
      with:
        subscriptionId: ${{ env.SUBSCRIPTION-ID }}
        resourceGroupName: ${{ env.RESOURCE-GROUP }}
        template: bicep-template/webapp.bicep
        parameters: 'webAppName=${{ env.WEBAPP-NAME }} location=${{ env.LOCATION }}'
        failOnStdErr: false  
    - name: deploy
      uses: azure/arm-deploy@v1
      with:
        subscriptionId: ${{ env.SUBSCRIPTION-ID }}
        resourceGroupName: ${{ env.RESOURCE-GROUP }}
        template: bicep-template/webapp.bicep
        parameters: 'webAppName=${{ env.WEBAPP-NAME-API }} location=${{ env.LOCATION }}'
        failOnStdErr: false 
    - name: deploy
      uses: azure/arm-deploy@v1
      with:
        subscriptionId: ${{ env.SUBSCRIPTION-ID }}
        resourceGroupName: ${{ env.RESOURCE-GROUP }}
        template: bicep-template/webapp.bicep
        parameters: 'webAppName=${{ env.WEBAPP-NAME-FRONT }} location=${{ env.LOCATION }}'
        failOnStdErr: false   
    
    # Publish website to Azure App Service (WebApp)
    - name: Publish Website to WebApp
      uses: Azure/webapps-deploy@v2
      with:
        app-name: ${{ env.WEBAPP-NAME  }}
        package: .net-app
    - name: Publish Website to WebApp
      uses: Azure/webapps-deploy@v2
      with:
        app-name: ${{ env.WEBAPP-NAME-API  }}
        package: .net-app1
    - name: Publish Website to WebApp
      uses: Azure/webapps-deploy@v2
      with:
        app-name: ${{ env.WEBAPP-NAME_FRONT  }}
        package: .net-app2
   
